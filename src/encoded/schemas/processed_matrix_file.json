{
    "title": "Processed matrix file",
    "description": "Schema for submitting metadata for a processed matrix file.",
    "id": "/profiles/processed_matrix_file.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": ["dataset", "description", "output_types", "derived_from", "is_primary_data", "X_normalized", "feature_keys"],
    "identifyingProperties": ["uuid", "accession", "aliases"],
    "additionalProperties": false,
    "mixinProperties": [
        {"$ref": "mixins.json#/aliases"},
        {"$ref": "mixins.json#/dataset"},
        {"$ref": "mixins.json#/description"},
        {"$ref": "mixins.json#/documents"},
        {"$ref": "mixins.json#/accession"},
        {"$ref": "mixins.json#/notes"},
        {"$ref": "mixins.json#/submitted"},
        {"$ref": "mixins.json#/lab"},
        {"$ref": "mixins.json#/schema_version"},
        {"$ref": "mixins.json#/url"},
        {"$ref": "mixins.json#/uuid"},
        {"$ref": "mixins.json#/accessioned_status"},
        {"$ref": "file.json#/properties"},
        {"$ref": "data_file.json#/properties"}
    ],
    "dependencies": {
        "external_accession": {
            "not": {
                "required": ["accession"]
            }
        },
        "revoke_detail": {
            "properties": {
                "status": {
                    "enum": ["revoked"]
                }
            }
        },
        "content_error_detail":{
            "required": ["status"],
            "properties": {
                "status": {
                    "enum": ["content error"]
                }
            }
        },
        "genome_annotation": {
            "required": ["assembly"],
            "oneOf": [
                {
                    "properties": {
                        "assembly": {
                            "enum": ["hg19"]
                        },
                        "genome_annotation": {
                            "enum": ["GENCODE 19"]
                        }
                    }
                },
                {
                    "properties": {
                        "assembly": {
                            "enum": ["GRCh38"]
                        }
                    }
                },
                {
                    "properties": {
                        "assembly": {
                            "enum": ["mm10"]
                        },
                        "genome_annotation": {
                            "enum": ["GENCODE M23", "GENCODE M18",  "GENCODE M9"]
                        }
                    }
                }
            ]
        },
        "primary_portion": {
            "required": ["is_primary_data"],
            "properties": {
                "is_primary_data": {
                    "enum": ["mixed"]
                }
            }
        },
        "gene_activity_genome_annotation": {
            "required": ["output_types","feature_keys"],
            "properties": {
                "output_types": {
                    "enum": [
                        ["gene quantifications"]
                    ]
                },
                "feature_keys": {
                    "enum": [
                        ["Ensembl gene ID"]
                    ]
                }
            }
        },
        "is_primary_data": {
            "oneOf": [
                {
                    "properties": {
                        "is_primary_data": {
                            "enum": ["True", "False"]
                        }
                    }
                },
                {
                    "properties": {
                        "is_primary_data": {
                            "enum": ["mixed"]
                        }
                    },
                    "required": ["primary_portion"]
                }
            ]
        }
    },
    "properties": {
        "schema_version": {
            "default": "10"
        },
        "description": {
            "description": "The text describing the matrix, will be displayed as the title at cellxgene."
        },
        "s3_uri": {
            "comment": "If a file has been altered at all from the version provided by the lab, the name should be altered from the provided <base>.<ext> to <base>_<ext>_curated.h5ad"
        },
        "derived_from": {
            "items": {
                "title": "Derived from",
                "description": "A file participating as input into software to produce this output file.",
                "type": "string",
                "linkTo": [
                    "RawSequenceFile",
                    "RawMatrixFile",
                    "Library"
                ]
            }
        },
        "derivation_process": {
            "default": ["single cell analysis pipeline"],
            "items": {
                "type":  "string",
                "enum": [
                    "single cell analysis pipeline"
                 ]
            }
        },
        "file_format": {
            "enum": [
                "hdf5"
            ],
            "default": "hdf5"
        },
        "output_types": {
            "items": {
                "type": "string",
                "enum": [
                    "gene quantifications",
                    "transcript quantifications",
                    "peak quantifications",
                    "transcription factor quantifications",
                    "antibody capture quantifications"
                ]
            }
        },
        "feature_keys": {
            "title": "Feature keys",
            "description": "The category of identifiers used as the key for the features of the matrix.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Feature key",
                "type": "string",
                "enum": [
                    "Ensembl gene ID",
                    "gene symbol",
                    "antibody target",
                    "genomic coordinates",
                    "motif ID"
                ]
            }
        },
        "author_columns": {
            "title": "Author columns",
            "description": "A list of column labels in the matrix that should be retained when transferring the data to cellxgene.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Author column",
                "type": "string"
            }
        },
        "default_embedding": {
            "title": "Default embedding",
            "description": "The name of the cell embedding that will be used as default for display on cellxgene, which should correspond to a key in ‘obsm’..",
            "type": "string",
            "pattern": "^(X_)"
        },
        "experimental_variable_disease": {
            "title": "Experimental variable disease",
            "description": "The primary disease variable used in the analysis of data within this matrix, distinguishing the disease group from the control, or normal, group.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "OntologyTerm"
            }
        },
        "is_primary_data": {
            "title": "Is primary data",
            "description": "If true, this will be the primary representation of the cells within the matrix at cellxgene.",
            "comment": "Each cell should be primary exactly once at cellxgene.",
            "type": "string",
            "enum": [
                "True",
                "False",
                "mixed"
            ]
        },
        "primary_portion": {
            "title": "Primary portion",
            "description": "The portion of observations in the matrix that should be annotated as primary:True",
            "comment": "Should only be used if is_primary_data is 'mixed'",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "obs_field": {
                    "title": "obs field",
                    "description": "The observation field that denotes primary:True vs False",
                    "type": "string"
                },
                "values": {
                    "title": "Values",
                    "description": "The values in the corresponding obs field that should be annotated as primary:True",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "layers_to_keep": {
            "title": "Layers to keep",
            "description": "The keys of the layers in the matrix that should be preserved.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            }
        },
        "feature_counts": {
            "title": "Feature counts",
            "description": "For each category of feature type, the number of entries found in the matrix considered as features (eg: genes, antibody capture, or peaks)",
            "comment":  "Do not submit. This will be filled in during checkfiles validation.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Feature count",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "feature_type": {
                        "title": "Feature type",
                        "comment":  "Do not submit. This will be filled in during checkfiles validation.",
                        "type": "string",
                        "enum": [
                            "gene",
                            "peak",
                            "transcription factor",
                            "antibody capture"
                        ]
                    },
                    "feature_count": {
                        "title": "Feature count",
                        "comment":  "Do not submit. This will be filled in during checkfiles validation.",
                        "description": "",
                        "type": "integer"
                    }
                }
            }
        },
        "X_normalized": {
            "title": "X Normalized",
            "description": "A flag to indicate whether the expression values in .X have been normalized.",
            "type": "boolean"
        },
        "cell_label_location": {
            "title": "Cell label location",
            "description": "Indicator distinguishing if the label is concatenated as a prefix or suffix to the cell barcode.",
            "type": "string",
            "enum": [
                "prefix",
                "suffix"
            ]
        },
        "cell_label_mappings": {
            "title": "Cell label mappings",
            "description": "Information on what label was added to cell identifiers in this final matrix that is specific for the associated raw matrix",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Cell label mapping",
                "type": "object",
                "required": ["label", "raw_matrix"],
                "additionalProperties": false,
                "properties": {
                    "label": {
                        "title": "Label",
                        "description": "The string that is concatenated as a prefix or suffix to the cell barcode to make the unique cell identifier, including the connector string but not the '-1' if present",
                        "type": "string"
                    },
                    "raw_matrix": {
                        "title": "Raw matrix",
                        "description": "The accession of the raw matrix that is connected with the subset of cells in this matrix file associated to the corresponding mapping_string.",
                        "type": "string",
                        "linkTo": "RawMatrixFile"
                    }
                }
            }
        },
        "observation_count": {
            "title": "Observation count",
            "description": "The number of entries found in the matrix considered as observations (eg: cell barcodes)",
            "comment":  "Do not submit. This will be filled in during checkfiles validation.",
            "type": "integer"
        },
        "author_cell_type_column": {
            "title": "Author cell type column",
            "description": "The name of the metadata field that holds the researcher's most specific cell type annotation",
            "type": "string"
        },
        "demultiplexed_donor_column": {
            "title": "Demultiplexed donor column",
            "description": "The name of the metadata field that holds the researcher's demultiplexed donor assignment of the cell",
            "type": "string"
        },
        "donor_mappings": {
            "title": "Donor mappings",
            "description": "Information on what researcher donor identifier in this final matrix that is specified for the associated donor object",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Donor mapping",
                "type": "object",
                "required": ["label", "donor"],
                "additionalProperties": false,
                "properties": {
                    "label": {
                        "title": "Label",
                        "description": "The donor identifier found in the demultiplexed_donor_column that is associated with the corresponding donor object",
                        "type": "string"
                    },
                    "donor": {
                        "title": "Donor",
                        "description": "The donor object that is associated with the corresponding donor mapping label",
                        "type": "string",
                        "linkTo": "Donor"
                    }
                }
            }
        },
        "gene_activity_genome_annotation": {
            "title": "Gene activity genome annotation",
            "description": "Information regarding the reference used to convert from peaks to gene activity that wranglers used to map symbols to Ensembl IDs - could be a software package, a file name or ftp link, etc.",
            "type": "string",
            "comment": "Should only be submitted for a matrix with gene features (not peaks) from an epigenetic assay (e.g. ATAC-seq, Methyl-seq)."
        },
        "antibody_mappings": {
            "title": "Antibody mappings",
            "description": "Information on what researcher var index label in this final matrix that is specified for the associated antibody object",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Antibody mapping",
                "type": "object",
                "required": ["label", "antibody"],
                "additionalProperties": false,
                "properties": {
                    "label": {
                        "title": "Label",
                        "description": "The identifier found in var index that is associated with the corresponding target object",
                        "type": "string"
                    },
                    "antibody": {
                        "title": "Antibody",
                        "description": "The antibody object that is associated with the corresponding var index",
                        "type": "string",
                        "linkTo": "Antibody"
                    }
                }
            }
        },
        "cellxgene_uuid": {
            "title": "CELLxGENE UUID",
            "description": "The UUID of the CELLxGENE Dataset representing this matrix",
            "type": "string",
            "pattern": "^([0-9a-f]{8}\\-[0-9a-f]{4}\\-[0-9a-f]{4}\\-[0-9a-f]{4}\\-[0-9a-f]{12})$",
            "uniqueKey": "processed_matrix_file:cellxgene_uuid"
        },
        "spatial_s3_uri": {
            "title": "Spatial s3 URI",
            "description": "The S3 URI of spatial/ directory.",
            "comment": "This should contain: scalefactors_json.json, tissue_hires_image.png, tissue_lowres_image.png, and tissue_positions.csv OR tissue_positions_list.csv",
            "type": "string",
            "pattern": "^s3:\/\/submissions-(\\w|\/)+\/$"
        }
    },
    "facets": {
        "assays": {
            "title": "Assays"
        },
        "assemblies": {
            "title": "Genome assemblies"
        },
        "genome_annotations": {
            "title": "Genome annotations"
        },
        "output_types": {
            "title": "Output type"
        },
        "X_normalized": {
            "title": "X normalized"
        },
        "cell_annotations.cell_ontology.term_name": {
            "title": "Annotated cell types",
            "type": "typeahead"
        },
        "lab.title": {
            "title": "Lab"
        },
        "award.name": {
            "title": "Award"
        },
        "status": {
            "title": "Status"
        }
    },
    "columns": {
        "accession": {
            "title": "Accession"
        },
        "aliases": {
            "title": "Aliases"
        },
        "dataset": {
            "title": "Dataset"
        },
        "assemblies": {
            "title": "Genome assemblies"
        },
        "genome_annotations": {
            "title": "Genome annotations"
        },
        "is_primary_data": {
            "title": "Is primary data"
        },
        "cellxgene_uuid": {
            "title": "CELLxGENE UUID"
        },
        "feature_keys": {
            "title": "Feature keys"
        },
        "s3_uri": {
            "title": "S3 URI"
        },
        "output_types": {
            "title": "Output types"
        },
        "lab.title": {
            "title": "Lab"
        },
        "award.name": {
            "title": "Award"
        },
        "status": {
            "title": "Status"
        }
    },
    "changelog": "/profiles/changelogs/processed_matrix_file.md"
}
